<% if user_comment %>

  <%  commentableIDs = []
    @comments = UserComment.all
  %>
  <% @comments.each do |com| %>
  <%  if com.user_id ==  current_user.id %>
    <%    commentableIDs << com.commentable_id %>
  <%  end %>
<%  end %>

  <% if user_comment.commentable_type == "Post"  %>
    <%  currentUserPosts = []
        @posts = Post.all
      %>

     <% @posts.each do |userPost| %>
      <% if userPost.user_id ==  current_user.id %>
          <% currentUserPosts << userPost.id %>
      <% end %>
    <%  end %>
    <% listOfPosts = currentUserPosts + commentableIDs
        listOfPosts = listOfPosts.uniq  %>

    <% if  listOfPosts.include? user_comment.commentable_id  %>
    <%  post = Post.find_by_id(user_comment.commentable_id)  %>
    <% if User.where(:id => user_comment.user_id).exists? %>
    <% if post %>
      <div id="post">
        <% @user = User.find_by_id(user_comment.user_id) %>
        <% if @user.avatar != nil %>
          <div class="picture"><%= image_tag @user.avatar.url(:medium) %></div>
        <% end %>
        <% if post.file_file_name == nil %>
        <div class="content">
          <%= link_to student_profile_path(@user) do %><div class="name"><%= @user.full_name %></div>
          <% end %>
              commented on post
              <%= link_to post_path(post) do %>
                <%= raw Rinku.auto_link(truncate(post.content, length: 40), :all, 'target="_blank"') %>
        <% end %>
            <div class="timestamp">
              <%= user_comment.created_at.to_date.to_formatted_s( :long_ordinal ) %>
            </div>
        </div>
      <% else %>
        <div class="content">
          <%= link_to student_profile_path(@user) do %><div class="name"><%= @user.full_name %></div>
          <% end %>
            commented on post
          <%= raw Rinku.auto_link(truncate(post.content, length: 40), :all, 'target="_blank"') %>
            <div class="image"><%= image_tag post.file.url(:preview) %></div>

            <div class="timestamp">
              <%= user_comment.created_at.to_date.to_formatted_s( :long_ordinal ) %>
            </div>
        </div>
      <% end %>

      </div>
      <% end %>
    <% else %>
    <% end %>
    <% end %>

  <% elsif user_comment.commentable_type == "Assignment"  %>
    <%  currentAssignments = []
        @assignments = UserAssignment.all
    %>
    <% @assignments.each do |userAssignment| %>
      <% if userAssignment.user_id ==  current_user.id %>
        <% currentAssignments << userAssignment.id %>
      <% end %>
    <%  end %>

    <% listOfPosts = currentAssignments + commentableIDs
    listOfPosts = listOfPosts.uniq  %>
    <% if  listOfPosts.include? user_comment.commentable_id  %>
    <%  assignment = UserAssignment.find_by_assignment_id(user_comment.commentable_id)  %>
    <%  curAssignment = Assignment.find_by_id(assignment.assignment_id)  %>


    <% if User.where(:id => user_comment.user_id).exists? %>

     <div id="post">
        <% @user = User.find_by_id(user_comment.user_id) %>
        <% if @user.avatar != nil %>
        <div class="picture"><%= image_tag @user.avatar.url(:medium) %></div>
        <% end %>

        <div class="content">
          <%= link_to student_profile_path(@user) do %>
            <div class="name"><%= @user.full_name %></div>
          <% end %>
            commented on assignment
            <%= link_to assignment_path(curAssignment) do %>
              <%= truncate(curAssignment.title, length: 30) %>
            <% end %>

          <div class="timestamp"><%= user_comment.created_at.to_date.to_formatted_s( :long_ordinal ) %></div>
        </div>
      </div>
    <% else %>
    <% end %>
  <% else %>
  <% end %>

  <% elsif user_comment.commentable_type == "Event"  %>

    <%  currentEvents = []
        @events = Event.all
      %>

     <% @events.each do |event| %>
      <% if event.user_id ==  current_user.id %>
          <% currentEvents << event.id %>
      <% end %>
    <%  end %>
    <% listOfPosts = currentEvents + commentableIDs
    listOfPosts = listOfPosts.uniq  %>
    <% if  listOfPosts.include? user_comment.commentable_id  %>
    <%  event = Event.find_by_id(user_comment.commentable_id)  %>
    <% if User.where(:id => user_comment.user_id).exists? %>

      <div id="post">
        <% @user = User.find_by_id(user_comment.user_id) %>
        <% if @user.avatar != nil %>
        <div class="picture"><%= image_tag @user.avatar.url(:medium) %></div>
        <% end %>
        <div class="content">
          <%= link_to student_profile_path(@user) do %><div class="name"><%= @user.full_name %></div>
          <% end %>
            commented on event
            <%= link_to truncate(event.name, length: 30), event %>
            <div class="timestamp"><%= user_comment.created_at.to_date.to_formatted_s( :long_ordinal ) %></div>
        </div>

      </div>

    <% else %>
    <% end %>
  <% else %>
  <% end %>

  <% else %>
  <% end %>

<% end %>


<%-# What's happening here ?
#a) user_comment is used Because the activity presenter find comment through User
#b) since we want the Post not the comment, we use user_comment id to find the Post. -%>
